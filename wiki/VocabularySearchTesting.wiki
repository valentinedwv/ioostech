#summary Testing capability of SPARQL queries to assist catalog searches.
#labels python,sparql

<wiki:toc max_depth="3" />

= Introduction =

Most catalog services provide some search mechanisms of the metadata fields.  However, these tend to be limited to exact matches or specific fields but not able to find data that is somewhat related or same data that is labeled differently.  Searching for like or similar terms is an important step towards improving the search capability within data catalogs like THREDDS or geoportal catalog services.  In this section, IOOS is testing automated search capabilities and discovery of terms based on relationships established in mapping vocabulary.  This is an attempt to create a tunnel or mechanism by which more intelligent searches can be made.

But what is returned is only as good as the SPARQL query and the mappings in the vocabulary. 

= SPARQL Endpoint =

Numerous examples exist in PERL, Python, and HTML Forms that illustrate how to issue SPARQL queries to vocabulary search services.  SPARQL Endpoints can return the data in different formats (HTML, JSON, CSV, RDF, N3), but not all endpoints can return all these formats.  The MMI Endpoint returns CSV, JSON, and HTML.  

As a proof-of-concept, a python script examples were created to show how to submit a SPARQL query with a JSON return, being the easiest format of response to work with python.  

  == SPARQL-Python Examples  ==
 
   * [http://nbviewer.ipython.org/urls/raw.github.com/nccoos/ioos-vocabulary-search/master/example_sparql_urllib2.ipynb using urllib2 (example_sparql_urllib2.ipynb)]
   * [http://nbviewer.ipython.org/urls/raw.github.com/nccoos/ioos-vocabulary-search/master/example_sparql_wrapper.ipynb using SPARQLWrapper (example_sparql_wrapper.py)]

  == CSW-Python Examples ==

   * [http://nbviewer.ipython.org/urls/raw.github.com/nccoos/ioos-vocabulary-search/master/example_csw_ngdc_geoportal.ipynb Using OWSLIB-CSW to access NGDC Geoportal CSW (example_csw_ngdc_geoportal.ipynb)]
   