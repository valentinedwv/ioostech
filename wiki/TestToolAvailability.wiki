#summary Discussion of SOS Service validation tools availability and necessity
#sidebar SOSTableOfContents

<wiki:toc max_depth="3" />



= Test tool availability =

|| *Test* || * Required * || * Tested by OGC tool * || *Comments*||
|| GetCapabilities, GET method|| yes || yes || ||
|| GetCapabilities, POST method|| yes || no || [https://wiki.52north.org/bin/view/SensorWeb/SosTutorial various options available for 52North] ||
|| DescribeSensor, GET method || yes || no ||  ||
|| DescribeSensor, POST method || yes || yes || [http://sensorweb.demo.52north.org/52nSOSv3.2.1 test available for 52North] ||
|| GetObservation, GET method || ? || no ||  ||
|| GetObservation, POST method || yes || yes || [http://sensorweb.demo.52north.org/52nSOSv3.2.1 various options available for 52North] ||
|| GetObservation with "result" parameters/filters || yes || no || [http://sensorweb.demo.52north.org/52nSOSv3.2.1 various options available for 52North] ||
|| DescribeFeatureType || ? || no ||  ||
|| DescribeObservationType || ? || no ||  ||
|| DescribeResultModel || no || no ||  ||
|| GetObservationById || no || no ||  ||
|| GetResult || no || no ||  ||
|| GetFeatureOfInterest || no || no ||  ||
|| GetFeatureOfInterestTime || no || no ||  ||
|| InsertObservation || no || no ||  ||
|| RegisterSensor || no || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||
||  ||  || no ||  ||

==List of test scripts included into OGC SOS v1.0 test ==

*NOTE*: The following test break-down list is for reference only. It was completed for v4 of the test; therefore, it may not be completely relevant for the latest version.


*OWS Common Tests*
 *sos:ows-main 
 *owsTests:ows-main 
   **Assertion: Run test group for GetCapabilities requests using the GET method. Target endpoint is {$serviceURL//ows:OperationsMetadata/ows:Operation[@name='GetCapabilities']/ows:DCP/ows:HTTP/ows:Get/@xlink:href}
 *owsTests:ows-OWS.GetCapabilities.1
   **Assertion: The GET method request must be supported (using HTTP GET). Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root element matches the provided root element. 
 *owsTests:ows-OWS.ContentType.1
   **Assertion: A response message containing an entity body must contain a Content-Type entity header field that correctly indicates the media type of the message body. Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root document matches the root element name; (3) the response Content-Type header must be "text/xml" for XML entities. 
 *owsTests:ows-OWS.GetCapabilities-Exceptions.1
   **Assertion: In the event that a GetCapabilities request cannot be processed for any reason, the response entity shall include an exception report. The exception code must be one of those listed in Table 5 in the specification document. GetCapabilities with no _*service*_ parameter and _*version*_ parameter equal to 1.0.0. Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root document is an ows:ExceptionReport document; (3) the ExceptionReport shall have the "MissingParameterValue" exception code; (4) the ExceptionReport @locator value shall be that of the missing parameter.
 *owsTests:ows-OWS.GetCapabilities-Exceptions.2 
   **Assertion: In the event that a GetCapabilities request cannot be processed for any reason, the response entity shall include an exception report. The exception code must be one of those listed in Table 5. GetCapabilities with a bogus _*service*_ parameter value (ADSF), and _*version*_ parameter equal to 1.0.0.  Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root document is an ows:ExceptionReport document; (3) the ExceptionReport shall have the 'InvalidParameterValue' exception code; (4) theExceptionReport @locator value shall be that of the invalid parameter.
 *owsTests:ows-OWS.GetCapabilities-Exceptions.3 
   **Assertion: In the event that a GetCapabilities request cannot be processed for any reason, the response entity shall include an exception report. The exception code must be one of those listed in Table 5. GetCapabilities with _*service*_ parameter SOS, _*version*_ parameter 1.0.0, and bogus _*AcceptVersions*_ parameter 2000-01-01.
 *owsTests:ows-OWS.GetCapabilities-Exceptions.5
   **Assertion: In the event that a GetCapabilities request cannot be processed for any reason, the response entity shall include an exception report. The exception code must be one of those listed in Table 5. GetCapabilities with an incorrect KVP query string `http://SOS-server-URL/sos?request~GetCapabilities!service~!SOS`, triggering the missing parameter value exception.  Pass if all of the following conditions are true: (1) the response is schema 
valid; (2) the root document is an ows:ExceptionReport document; (3) the ExceptionReport shall have the "MissingParameterValue" exception code, for both the request and service.
 *owsTests:ows-OWS.CaseInsensitiveKvpNames.1
   **Assertion: Parameter names in KVP strings shall be handled in a case-insensitive manner. GetCapabilities with the KVP parameter names in all uppercase, lower-case and mixed-case.  Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root element matches the provided root element.
 *owsTests:ows-OWS.GetCapabilities-AcceptVersions.1 
   **Assertion: If AcceptVersion is not specified, the service must respond with highest supported version. GetCapabilities with no version and service of "SOS". Without AcceptVersion, using version negotiation, sends latest copy.  Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root document is an sos:SOS_Capabilities document; (3) the response version must be what was requested
 *owsTests:ows-OWS.GetCapabilities-AcceptVersions.2 
   **Assertion: Version negotiation using AcceptVersions parameter (preference ordering) must return service metadata corresponding to the most preferred version that is supported. If none of the requested versions are supported, the server must generate an exception with code 'VersionNegotiationFailed'. GetCapabilities with no version and service of "SOS".  With AcceptVersion, expecting one of the versions listed $acceptVersions.  Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root document is an sos:SOS_Capabilities document; (3) the response version must be what was requested. The AcceptVersion element is used with a number of versions, one is expected to return ('1.1.0').
 *owsTests:ows-OWS.GetCapabilities-AcceptVersions.3 
   **Assertion: Version negotiation using AcceptVersions parameter (preference ordering) must return service metadata corresponding to the most preferred version that is supported. If none of the requested versions are supported, the server must generate an exception with code 'VersionNegotiationFailed'. GetCapabilities with no _*version*_, _*service*_ of "SOS", and bogus _*AcceptVersion*_ number "2000-01-01" `http://SOS-server-URL/sos?request=GetCapabilities&service=SOS&acceptversions=2000-01-01`. Pass if all of the following conditions are true: (1) the response is schema valid; (2) the root document is an ows:ExceptionReport document; (3) the ExceptionReport shall have the "VersionNegotiationFailed" exception code.
 *owsTests:ows-OWS.GetCapabilities-Sections.1 
   **Assertion: The response to a GetCapabilities request that includes a sections parameter with NO VALUE provided shall include an abbreviated capabilities document that omits all optional sections `http://SOS-server-URL/sos?service=SOS&request=GetCapabilities&sections=`. Pass if the response is schema valid and omits all optional top-level elements.
 *owsTests:ows-OWS.GetCapabilities-Sections.2
   **Assertion: The response to a GetCapabilities request that includes a sections parameter listing optional elements _*ServiceIdentification*_ and _*OperationsMetadata*_ shall include only the requested elements in the response entity `http://SOS-server-URL/sos?service=SOS&request=GetCapabilities&sections=ServiceIdentification,OperationsMetadata`. Pass if the response is schema valid and includes only the requested optional elements.
 *owsTests:ows-OWS.GetCapabilities-AcceptFormats.1 
   **Assertion: The response to a GetCapabilities request containing an _*AcceptVersions*_ parameter specifying a supported format must include a response entity that corresponds to the requested media type `http://SOS-server-URL/sos?service=SOS&request=GetCapabilities&acceptformats=text/xml` and `http://SOS-server-URL/sos?service=SOS&request=GetCapabilities&acceptformats=application/zip`.

*General SOS Tests*
 *sos:general-main 
 *sos:general-SOS.General-InvalidRequest.1 
 *sos:general-SOS.General-ValidResponse.1 

*Core SOS Tests*
 *sos:core-main 

*GetCapabilities Tests*
 *getCapabilities:core-SOS.GetCapabilities-KVPRequestParameterHandling.1 
 *getCapabilities:core-SOS.GetCapabilities-KVPRequestServiceParameterHandling.1 
 *getCapabilities:core-SOS.GetCapabilities-KVPRequestRequestParameterHandling.1 
 *getCapabilities:core-SOS.GetCapabilities-OperationsMetadataMandatoryOperations.1 
 *getCapabilities:core-SOS.GetCapabilities-OperationsMetadaOptionalOperations.1 
 *getCapabilities:core-SOS.GetCapabilities-ResponseContentsValidTime.1 
 *getCapabilities:core-SOS.GetCapabilities-ResponseContentsValidProcedure.1 
 *getCapabilities:core-SOS.GetCapabilities-ResponseContentsValidObservedProperty.1 
 *getCapabilities:core-SOS.GetCapabilities-ResponseContentsValidResponseFormat.1
 *getCapabilities:core-SOS.GetCapabilities-ResponseContentsValidResultModel.1 
 *getCapabilities:core-SOS.GetCapabilities-ResponseContentsValidResponseMode.1 

*Describe Sensor Tests*
 *describeSensor:core-SOS.DescribeSensor-RequestInvalidMIMEType.1 
 *describeSensor:core-SOS.DescribeSensor-RequestInvalidProcedure.1 
 *describeSensor:core-SOS.DescribeSensor-ResponseMatchingResponseFormat.1 
 *describeSensor:core-SOS.DescribeSensor-ResponseMatchingProcedure.1 

*GetObservation Tests*
 *getObservation:core-SOS.GetObservation-RequestInvalidSRSName.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidOffering.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidEventTime.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidProcedure.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidFeatureOfInterest.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidObservedProperty.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidResult.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidResponseFormat.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidResultModel.1 
 *getObservation:core-SOS.GetObservation-RequestInvalidResponseMode.1 
 *getObservation:core-SOS.GetObservation-ResponseMatchingSRSData.1 
 *getObservation:core-SOS.GetObservation-ResponseMatchingProcedureData.1 
 *getObservation:core-SOS.GetObservation-ResponseMatchingObservedPropertyData.1 
 *getObservation:core-SOS.GetObservation-ResponseAdvertisedEventTimeData.1 
 *getObservation:core-SOS.GetObservation-ResponseMatchingEventTimeData.1 
 *getObservation:core-SOS.GetObservation-ResponseMatchingFeatureOfInterestData.1 
 *getObservation:core-SOS.GetObservation-ResponseMatchingResultData.1 
 *getObservation:core-SOS.GetObservation-ResponseMatchingResponseFormatData.1