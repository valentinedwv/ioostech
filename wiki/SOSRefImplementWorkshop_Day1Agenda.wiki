#summary Day-1 Agenda for IOOS SOS Reference Implementation Workshop
#labels SOS

= DRAFT Day-1 Agenda: The broader SOS request and response context =

[SOSReferenceImplementationWorkshop IOOS DMAC SOS Reference Implementation Working Group Meeting].

  _"While time is passing, the technological foundations upon which data management systems are built are certain to continue advancing rapidly. These considerations argue for adopting attitudes of pragmatism and realism when planning data management strategies. We should understand that technological progress is always made in incremental steps, rather than 'heroic leaps'. We should give consideration to technology choices based upon their potential contributions to the distant vision, but we should measure them by their effectiveness at addressing todayâ€™s challenges." [#Footnotes ^[1]^]_


== General Goals ==

Getting the basics and common elements squared away:
  * Settling on and clearly documenting conventions, controlled vocabularies, defaults, recommended best practices, etc, for all elements of GetCapabilities requests and responses
  * Minimal required DescribeSensor (SensorML) request and response
  * Aspects of GetObservation requests and responses related to the above, and not covered by the Day 2-3 Agenda (_SWE Common Templates for CDM Scientific Feature Types_)

Or described another way:

  # *Develop clear and consistent IOOS SOS request and response specifications to be implemented uniformly across IOOS and used to:*
    * Develop and validate SOS services
    * Develop SOS clients
  # *Clarify and extend mandated vs recommended practices, including:*
    * [#Classifiers_(Controlled_vocabularies) Classifiers (Controlled vocabularies)]
    * [#Identifiers Identifiers]
    * [#Default_values_and_behaviors Default values and behaviors]
    * [#SOS_requests_Interface_Definition_Document SOS requests Interface Definition Document] (GetCapabilities, DescribeSensor, GetObservation)
    * Existing practices vs needed enhancements
    * Link to the [http://ioostech.googlecode.com/files/IOOS_SOS_Documentation_v0p1.doc Word document Derrick started ~ Oct 2011, "IOOS SOS Documentation"]

Many of these goals could be applied to the entire workshop, but as described are tuned to the Day 1 agenda. They also involve laying out a path for useful, clear service documentation, both in the form of bare-bones [https://groups.google.com/d/topic/ioostech_dev/hTMaCJtkcWo/discussion "Interface Definition Document" (IDD)] templates that should be followed by every SOS service implementation (intended as a quick-takeup guide for service and client implementers and users), and more detailed documentation.

[http://www.oostethys.org/best-practices The OOSTethys 2008 Guides and Best Practices documents] served as a foundation for many of the current IOOS SOS implementation details. It's still a highly relevant and well structured guide that we should refer to often and re-use as needed. _I'll add specific links in each section below, as appropriate._
----


== Classifiers (Controlled vocabularies) ==

The target set of controlled vocabulary types we will likely need are:
  * organization type (eg, Federal agency, IOOS Regional Association, state agency, industry)
  * organizational role (service provider, data provider or asset owner)
  * keywords (including geographical regions?)
  * platform (asset) type
  * observed property
  * units-of-measure

For observed properties, given the adoption of CF names and their lack of support for vector properties (ie, properties made of up two or more scalars, such as winds), what is the long-term role for the original IOOS core variable names? Also, I've always found very helpful [http://www.pmel.noaa.gov/maillists/tmap/ioos_wsde/msg00699.html this 2010-1-26 email from Jeff DLB to the ioos_wsde list, describing the elements of adopting "MMI/CF phenomenon names for IOOS".]

Address implementation details, in general and for each targeted vocabulary type.

For now, until this section is better fleshed out and organized, see these wiki pages:
  * [ControlledVocabularies], from Rob Ragsdale and Derrick. Largely about observed properties.
  * [EmilioControlledVocabs], from Emilio. Miscellaneous.
  * [DescribeSensorMetadataForIOOSSOS], from Micah. Addresses several classifier types and options, particularly in SensorML.
  * Regarding roles:
    * [RepresentingRAAffiliationInServiceMetadata]
    * [RepresentingRolesinServiceMetadata]


== Identifiers ==

Existing IOOS identifier conventions include station (sometimes described as platform), sensors, and "collections" (network). These are currently implemented as urn's only.

See also [DescribeSensorMetadataForIOOSSOS this wiki page from Micah].

Link to the [http://ioostech.googlecode.com/files/IOOS_Conventions_for_Asset_Identifiers_2011-01-21_dps.docx Word document "IOOS Conventions for Asset Identifiers"]


== Default values and behaviors ==

A draft of elements. These may be parsed out into different sections in the final agenda. _This is not yet comprehensive or vetted, of course!_

  * access: HTTP GET and POST (but mainly GET)
  * GET KVP's are case-insensitive (both K & V, or all K's and *some* V's?)
  * a request to the naked, unqualified service (no request, service or version keys) returns the GetCapabilities response. _This was the [http://www.oostethys.org/ OOSTethys]-recommended convention (Eric, is that true?). Should we continue it?_
  * use of a default namespace in XML responses is forbidden
  * spatial (XYZ) conventions
    * all x & y locations are only in lat-lon (wgs84, nothing else); these are fully qualified and parseable (srs, etc), but for now it's best to also accept that we'll only deal with lat-lon
    * depth/elevation conventions?
  * temporal conventions
    * all datetime values are specified as iso8601 strings, where seconds are optional (in requests)
    * only UTC/GMT time support is currently required, for both requests and responses
    * in GetObservation request, eventTime is optional; if absent, the latest observations will be returned. [http://www.oostethys.org/best-practices/getlatest See the relevant OOSTethys 2008 document, "Get Latest"]


== SOS requests Interface Definition Document ==

Examples, starting points:
  * [http://sdf.ndbc.noaa.gov/sos/ NDBC SOS]
  * [http://opendap.co-ops.nos.noaa.gov/ioos-dif-sos/parameters.jsp NOS-COOPS SOS]
  * [http://waterservices.usgs.gov/rest/IV-Service.html#Service USGS Water Services] (not SOS, but based on WaterML 1 and related services
  * [NANOOSNVSPythonSOS NANOOS SOS]
  * [https://wiki.52north.org/bin/view/Sensornet/SosOperations 52North Example]
  * Eric Bridger's OOSTethys/IOOS Perl server code?
  * [http://www.oostethys.org/best-practices/best-practices-get The OOSTethys 2008 "Best Practices SOS HTTP GET Request" document] is actually still highly relevant, I think. Copying to an IOOS-hosted site and updating it as needed may be the way to go!

Currently the interface descriptions for the two core IOOS SOS implementations (NDBC and NOS-COOPS) are quite different, as can be seen from the links above. Beyond any differences in actual implementations, using a common template description for describing the SOS services across providers is an achievable goal and would go a long way towards facilitating the development of common service and client software.

== Footnotes ==

^[1]^ Hankin, S., L. Bermudez, J.D. Blower, B. Blumenthal, K.S. Casey, M. Fornwall, J. Graybeal, R.P. Guralnick, T. Habermann, E. Howlett, B. Keeley, R. Mendelssohn, R. Schlitzer, R. Signell, *D. Snowden* and A. Woolf, (2010), Data Management for the Ocean Sciences - Perspectives for the Next Decade, in _Proceedings of OceanObs'09: Sustained Ocean Observations and Information for Society (Vol. 1)_, Venice, Italy, 21-25 September 2009, Hall, J., Harrison, D.E. & Stammer, D., Eds., ESA Publication WPP-306, [http://www.oceanobs09.net/proceedings/pp/pp21/ doi:10.5270/OceanObs09.pp.21]