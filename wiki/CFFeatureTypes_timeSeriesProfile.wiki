#summary The *timeSeriesProfile* feature type
#sidebar CFFeatureTypes_SideNavigation

= timeSeriesProfile =

There are four ways to represent timeSeriesProfile data in NetCDF files using the CF 1.6 convention.  These should all be mapped to a common SWE encoding.

<wiki:toc />

== CDL ==

=== Single Station ===

==== Multidimensional (SS) ====

[https://github.com/asascience-open/CFPointConventions/blob/master/timeSeriesProfile-Multidimensional-SingleStation-H.5.2 "Multidimensinoal (SS)"]

==== Ragged (SS) ====

[https://github.com/asascience-open/CFPointConventions/tree/master/timeSeriesProfile-Ragged-SingleStation-H.5.3 "Ragged (SS)"]

=== Multiple Station ===

==== Multidimensional (MS) ====
{{{
dimensions:
	station = 2 ;
	profile = 4 ;
	z = 30 ;
	name_strlen = 50 ;
variables:
	double lat(station) ;
		lat:units = "degrees_north" ;
		lat:long_name = "station latitude" ;
		lat:standard_name = "latitude" ;
	double lon(station) ;
		lon:units = "degrees_east" ;
		lon:long_name = "station longitude" ;
		lon:standard_name = "longitude" ;
	int station_info(station) ;
		station_info:long_name = "station info" ;
	char station_name(station, name_strlen) ;
		station_name:cf_role = "timeseries_id" ;
		station_name:long_name = "station name" ;
	double alt(station, profile, z) ;
		alt:units = "m" ;
		alt:positive = "up" ;
		alt:axis = "Z" ;
	int time(station, profile) ;
		time:long_name = "time" ;
		time:standard_name = "time" ;
		time:units = "seconds since 1990-01-01 00:00:00" ;
	double temperature(station, profile, z) ;
		temperature:long_name = "Water Temperature" ;
		temperature:units = "Celsius" ;
		temperature:coordinates = "time lat lon alt" ;

// global attributes:
	:CF\:featureType = "timeSeriesProfile" ;
}}}


==== Ragged (MS) ====
{{{
dimensions:
	station = 2 ;
	profile = 4 ;
	obs = 12 ;
	name_strlen = 50 ;
variables:
	double lat(station) ;
		lat:units = "degrees_north" ;
		lat:long_name = "station latitude" ;
		lat:standard_name = "latitude" ;
	double lon(station) ;
		lon:units = "degrees_east" ;
		lon:long_name = "station longitude" ;
		lon:standard_name = "longitude" ;
	int station_info(station) ;
		station_info:long_name = "station info" ;
	char station_name(station, name_strlen) ;
		station_name:cf_role = "timeseries_id" ;
		station_name:long_name = "station name" ;
	int profile(profile) ;
		profile:cf_role = "profile_id" ;
	int time(profile) ;
		time:long_name = "time" ;
		time:standard_name = "time" ;
		time:units = "seconds since 1990-01-01 00:00:00" ;
	int station_index(profile) ;
		station_index:long_name = "the station this profile is associated with" ;
		station_index:instance_dimension = "station" ;
	int row_size(profile) ;
		row_size:long_name = "number of obs in this profile" ;
		row_size:sample_dimension = "obs" ;
	double height(obs) ;
		height:long_name = "height above sea surface" ;
		height:standard_name = "height" ;
		height:units = "meters" ;
		height:axis = "Z" ;
		height:positive = "up" ;
	double temperature(obs) ;
		temperature:standard_name = "sea_water_temperature" ;
		temperature:long_name = "Water Temperature" ;
		temperature:units = "Celsius" ;
		temperature:coordinates = "time lat lon height" ;

// global attributes:
	:CF\:featureType = "timeSeriesProfile" ;
}}}



== SWE ==

{{{
<om:result>
  <swe:DataArray>
    <swe:elementCount>
      <swe:Count>
        <swe:value>2</swe:value>
      </swe:Count>
    </swe:elementCount>
    <swe:elementType name="SimpleDataArray">
      <swe:DataRecord>
        <swe:field name="time">
          <swe:Time definition="urn:ogc:phenomenon:time:iso8601"/>
        </swe:field>
        <swe:field name="temperature">
          <swe:Quantity definition="urn:ogc:def:phenomenon:mmisw.org:cf:temperature">
            <swe:uom code="Celsius"/>
          </swe:Quantity>
        </swe:field>
        <swe:field name="height">
          <swe:Quantity definition="urn:ogc:def:phenomenon:mmisw.org:cf:height">
            <swe:uom code="meters"/>
          </swe:Quantity>
        </swe:field>
      </swe:DataRecord>
    </swe:elementType>
    <swe:encoding>
      <swe:TextBlock blockSeparator=" " decimalSeparator="." tokenSeparator=","/>
    </swe:encoding>
    <swe:values>
      1990-01-01T00:00:00Z,6.7,0.5 1990-01-01T00:00:00Z,6.9,1.5
    </swe:values>
  </swe:DataArray>
</om:result>
}}}